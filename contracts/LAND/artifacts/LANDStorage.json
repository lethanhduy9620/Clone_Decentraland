{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506101fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631e3759011461003b57806329ffab3b1461006b575b600080fd5b610055600480360381019061005091906100e8565b61009b565b604051610062919061014a565b60405180910390f35b610085600480360381019061008091906100e8565b6100b3565b604051610092919061012f565b60405180910390f35b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b6000813590506100e2816101ad565b92915050565b6000602082840312156100fa57600080fd5b6000610108848285016100d3565b91505092915050565b61011a81610177565b82525050565b610129816101a3565b82525050565b60006020820190506101446000830184610111565b92915050565b600060208201905061015f6000830184610120565b92915050565b600061017082610183565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101b681610165565b81146101c157600080fd5b5056fea2646970667358221220176b0e9da1a1fb623126e6f0723098412cec7504c4eca2ac015b52cd33c9b6c664736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E375901 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x29FFAB3B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2 DUP2 PUSH2 0x1AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x108 DUP5 DUP3 DUP6 ADD PUSH2 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x129 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 DUP2 PUSH2 0x165 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH12 0xE9DA1A1FB623126E6F07230 SWAP9 COINBASE 0x2C 0xEC PUSH22 0x4C4ECA2AC015B52CD33C9B6C664736F6C6343000800 STOP CALLER ",
			"sourceMap": "67:406:1:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1641:5",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:5",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:5"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:5"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:5"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:5"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:5"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:5"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:5",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:5",
										"type": ""
									}
								],
								"src": "7:139:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "218:196:5",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "264:16:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "273:1:5",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "276:1:5",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "266:6:5"
															},
															"nodeType": "YulFunctionCall",
															"src": "266:12:5"
														},
														"nodeType": "YulExpressionStatement",
														"src": "266:12:5"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "239:7:5"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "248:9:5"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "235:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "235:23:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "260:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "231:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:32:5"
											},
											"nodeType": "YulIf",
											"src": "228:2:5"
										},
										{
											"nodeType": "YulBlock",
											"src": "290:117:5",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "305:15:5",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "319:1:5",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "309:6:5",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "334:63:5",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "380:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:22:5"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "389:7:5"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "344:20:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "344:53:5"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "334:6:5"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "188:9:5",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "199:7:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "211:6:5",
										"type": ""
									}
								],
								"src": "152:262:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "479:50:5",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "496:3:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "516:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "501:14:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "501:21:5"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "489:6:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "489:34:5"
											},
											"nodeType": "YulExpressionStatement",
											"src": "489:34:5"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "467:5:5",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "474:3:5",
										"type": ""
									}
								],
								"src": "420:109:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "600:53:5",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "617:3:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "640:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "622:17:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "622:24:5"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "610:6:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "610:37:5"
											},
											"nodeType": "YulExpressionStatement",
											"src": "610:37:5"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "588:5:5",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "595:3:5",
										"type": ""
									}
								],
								"src": "535:118:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "751:118:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "761:26:5",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "773:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "784:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "769:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "769:18:5"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "761:4:5"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "835:6:5"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "848:9:5"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "859:1:5",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "844:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "844:17:5"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "797:37:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "797:65:5"
											},
											"nodeType": "YulExpressionStatement",
											"src": "797:65:5"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "723:9:5",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "735:6:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "746:4:5",
										"type": ""
									}
								],
								"src": "659:210:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "973:124:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "983:26:5",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "995:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1006:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "991:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "991:18:5"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "983:4:5"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1063:6:5"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1076:9:5"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1087:1:5",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1072:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1072:17:5"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1019:43:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1019:71:5"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1019:71:5"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "945:9:5",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "957:6:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "968:4:5",
										"type": ""
									}
								],
								"src": "875:222:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1148:51:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1158:35:5",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1187:5:5"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1169:17:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1169:24:5"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1158:7:5"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1130:5:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1140:7:5",
										"type": ""
									}
								],
								"src": "1103:96:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1247:48:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1257:32:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1282:5:5"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1275:6:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1275:13:5"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1268:6:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1268:21:5"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1257:7:5"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1229:5:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1239:7:5",
										"type": ""
									}
								],
								"src": "1205:90:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1346:81:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1356:65:5",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1371:5:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1378:42:5",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1367:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1367:54:5"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1356:7:5"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1328:5:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1338:7:5",
										"type": ""
									}
								],
								"src": "1301:126:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1478:32:5",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1488:16:5",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1499:5:5"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1488:7:5"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1460:5:5",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1470:7:5",
										"type": ""
									}
								],
								"src": "1433:77:5"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1559:79:5",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1616:16:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1625:1:5",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1628:1:5",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1618:6:5"
															},
															"nodeType": "YulFunctionCall",
															"src": "1618:12:5"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1618:12:5"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1582:5:5"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1607:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1589:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:24:5"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1579:2:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1579:35:5"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1572:6:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1572:43:5"
											},
											"nodeType": "YulIf",
											"src": "1569:2:5"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1552:5:5",
										"type": ""
									}
								],
								"src": "1516:122:5"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 5,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631e3759011461003b57806329ffab3b1461006b575b600080fd5b610055600480360381019061005091906100e8565b61009b565b604051610062919061014a565b60405180910390f35b610085600480360381019061008091906100e8565b6100b3565b604051610092919061012f565b60405180910390f35b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b6000813590506100e2816101ad565b92915050565b6000602082840312156100fa57600080fd5b6000610108848285016100d3565b91505092915050565b61011a81610177565b82525050565b610129816101a3565b82525050565b60006020820190506101446000830184610111565b92915050565b600060208201905061015f6000830184610120565b92915050565b600061017082610183565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101b681610165565b81146101c157600080fd5b5056fea2646970667358221220176b0e9da1a1fb623126e6f0723098412cec7504c4eca2ac015b52cd33c9b6c664736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E375901 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x29FFAB3B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2 DUP2 PUSH2 0x1AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x108 DUP5 DUP3 DUP6 ADD PUSH2 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x129 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 DUP2 PUSH2 0x165 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH12 0xE9DA1A1FB623126E6F07230 SWAP9 COINBASE 0x2C 0xEC PUSH22 0x4C4ECA2AC015B52CD33C9B6C664736F6C6343000800 STOP CALLER ",
			"sourceMap": "67:406:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;420:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;95:43;;;;;;;;;;;;;;;;;:::o;420:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:109::-;501:21;516:5;501:21;:::i;:::-;496:3;489:34;479:50;;:::o;535:118::-;622:24;640:5;622:24;:::i;:::-;617:3;610:37;600:53;;:::o;659:210::-;;784:2;773:9;769:18;761:26;;797:65;859:1;848:9;844:17;835:6;797:65;:::i;:::-;751:118;;;;:::o;875:222::-;;1006:2;995:9;991:18;983:26;;1019:71;1087:1;1076:9;1072:17;1063:6;1019:71;:::i;:::-;973:124;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:77::-;;1499:5;1488:16;;1478:32;;;:::o;1516:122::-;1589:24;1607:5;1589:24;:::i;:::-;1582:5;1579:35;1569:2;;1628:1;1625;1618:12;1569:2;1559:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "101200",
				"executionCost": "147",
				"totalCost": "101347"
			},
			"external": {
				"authorizedDeploy(address)": "1545",
				"latestPing(address)": "1492"
			}
		},
		"methodIdentifiers": {
			"authorizedDeploy(address)": "29ffab3b",
			"latestPing(address)": "1e375901"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "authorizedDeploy",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "latestPing",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}